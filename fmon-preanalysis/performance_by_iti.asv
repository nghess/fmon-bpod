%% Pull Out ITI's and Performance for a mouse

iti_time = zeros(1,session_data.nTrials);
correct

for i = 1:session_data.nTrials
    iti_time(i) = round(session_data.RawEvents.Trial{1, i}.States.ITI(2) - session_data.RawEvents.Trial{1, i}.States.ITI(1));
    if ~isnan(session_data.RawEvents.Trial{1, ii}.States.CorrectLeft) || ~isnan(session_data.RawEvents.Trial{1, ii}.States.CorrectRight)
        
    end
end

% Loop through trials and count only if event was triggered (is not NaN)
if fmon_task == true
    for ii = 1:length(trialtypes)
        if ~isnan(session_data.RawEvents.Trial{1, ii}.States.GoLeft)
            left_total = left_total + 1;
            if ~isnan(session_data.RawEvents.Trial{1, ii}.States.CorrectLeft)
                left_correct = left_correct + 1;

            end
        end
        if ~isnan(session_data.RawEvents.Trial{1, ii}.States.GoRight)
            right_total = right_total + 1;
            if ~isnan(session_data.RawEvents.Trial{1, ii}.States.CorrectRight)
                right_correct = right_correct + 1;
            end
        end
    end


%% Make a script to go through each mouse/session and grab the info



%% Logistic Regression

% Create synthetic data
rng('default'); % For reproducibility
n = 100; % Number of samples
time = linspace(0, 10, n)';
correct = randi([0, 1], n, 1);

% Fit logistic regression model
[b, dev, stats] = glmfit(time, correct, 'binomial', 'link', 'logit');

% Generate new time points for prediction
time_new = linspace(0, 10, 300)';

% Get predicted probabilities
yhat = glmval(b, time_new, 'logit');

% Plotting
figure;

% Scatter plot of original data
scatter(time, correct, 'MarkerEdgeColor', [0 0 0]);

hold on;

% Plot the fitted logistic curve
plot(time_new, yhat, 'r', 'LineWidth', 2);

xlabel('Time');
ylabel('Probability of Being Correct');
legend('Observed Data', 'Fitted Curve', 'Location', 'Best');
grid on;

hold off;
